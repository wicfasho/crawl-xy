// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: page.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const insertPage = `-- name: InsertPage :one
INSERT INTO Page (URL, Title, Meta_Description, Meta_Keywords, Last_Modified)
VALUES ($1, $2, $3, $4, CURRENT_TIMESTAMP)
ON CONFLICT (URL)
DO UPDATE SET
    Title = EXCLUDED.Title,
    Meta_Description = EXCLUDED.Meta_Description,
    Meta_Keywords = EXCLUDED.Meta_Keywords,
    Last_Modified = CURRENT_TIMESTAMP
RETURNING PageID
`

type InsertPageParams struct {
	Url             string      `json:"url"`
	Title           pgtype.Text `json:"title"`
	MetaDescription pgtype.Text `json:"meta_description"`
	MetaKeywords    pgtype.Text `json:"meta_keywords"`
}

func (q *Queries) InsertPage(ctx context.Context, arg InsertPageParams) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, insertPage,
		arg.Url,
		arg.Title,
		arg.MetaDescription,
		arg.MetaKeywords,
	)
	var pageid uuid.UUID
	err := row.Scan(&pageid)
	return pageid, err
}
